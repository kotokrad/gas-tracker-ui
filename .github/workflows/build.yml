on:
  push:
    branches: ['*']
    tags: ['v[0-9]+.[0-9]+.[0-9]+']
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
      - run: yarn install
      # - run: yarn lint
      # - run: yarn test
      - run: REACT_APP_API_HTTP_ENDPOINT=https://gas.best yarn build
      - name: Upload artifact `gas-best`
        uses: actions/upload-artifact@v3
        with:
          name: gas-best
          path: build
      - run: yarn build:chrome
      - name: Upload artifact `gas-best-chrome`
        uses: actions/upload-artifact@v3
        with:
          name: gas-best-chrome
          path: build
      - run: yarn build:firefox
      - name: Upload artifact `gas-best-firefox`
        uses: actions/upload-artifact@v3
        with:
          name: gas-best-firefox
          path: build
      - name: Telegram Failure Notification
        uses: appleboy/telegram-action@v0.1.1
        if: failure()
        with:
          message: ‚ùó Build failed for [${{ github.repository }}](https://github.com/${{ github.repository }}/actions) because of [${{ github.actor }}](https://github.com/${{ github.actor }})
          format: markdown
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}

  publish-check-version:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set vars
        id: vars
        run: |
          echo "::set-output name=version::$(echo ${GITHUB_REF#refs/tags/v})"
          echo "::set-output name=repo_name::$(echo ${GITHUB_REPOSITORY#*/})"

      - name: Check package.json version vs tag
        run: |
          [ ${{ steps.vars.outputs.version }} = $(grep '"version":' package.json | grep -o "[0-9.]*") ] || (echo "Git tag doesn't match version in package.json" && false)

      - name: Telegram Failure Notification
        uses: appleboy/telegram-action@v0.1.1
        if: failure()
        with:
          message: ‚ùó Failed to publish [${{ steps.vars.outputs.repo_name }}](https://github.com/${{ github.repository }}/actions) because of [${{ github.actor }}](https://github.com/${{ github.actor }})
          format: markdown
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}

  publish-docker-latest:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set vars
        id: vars
        run: |
          echo "::set-output name=repo_name::$(echo ${GITHUB_REPOSITORY#*/})"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Telegram Failure Notification
        uses: appleboy/telegram-action@v0.1.1
        if: failure()
        with:
          message: ‚ùó Failed to publish [${{ steps.vars.outputs.repo_name }}](https://github.com/${{ github.repository }}/actions) because of [${{ github.actor }}](https://github.com/${{ github.actor }})
          format: markdown
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}

  publish-docker:
    runs-on: ubuntu-latest
    needs: publish-check-version
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set vars
        id: vars
        run: |
          echo "::set-output name=version::$(echo ${GITHUB_REF#refs/tags/v})"
          echo "::set-output name=repo_name::$(echo ${GITHUB_REPOSITORY#*/})"
          echo "::set-output name=tag::$(echo ghcr.io/$GITHUB_REPOSITORY:stable,ghcr.io/$GITHUB_REPOSITORY:$GITHUB_REF_NAME)"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.vars.outputs.tag }}

      - name: Telegram Failure Notification
        uses: appleboy/telegram-action@v0.1.1
        if: failure()
        with:
          message: ‚ùó Failed to publish [${{ steps.vars.outputs.repo_name }}](https://github.com/${{ github.repository }}/actions) because of [${{ github.actor }}](https://github.com/${{ github.actor }})
          format: markdown
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}

  publish-firefox:
    runs-on: ubuntu-latest
    needs: publish-check-version
    steps:
      - name: Download artifact `gas-best-firefox`
        uses: actions/download-artifact@v3
        with:
          name: gas-best-firefox
          path: gas-best-firefox

      - name: Set vars
        id: vars
        run: |
          echo "::set-output name=repo_name::$(echo ${GITHUB_REPOSITORY#*/})"

      - name: Create zip
        run: cd gas-best-firefox && zip -r ../gas-best-firefox.xpi .

      - name: Upload to Firefox store
        uses: trmcnvn/firefox-addon@v1
        with:
          uuid: '{971ef7fe-18be-4ccc-af21-11cd986acaa8}'
          xpi: gas-best-firefox.xpi
          manifest: gas-best-firefox/manifest.json
          api-key: ${{ secrets.FIREFOX_API_KEY }}
          api-secret: ${{ secrets.FIREFOX_API_SECRET }}

      - name: Telegram Failure Notification
        uses: appleboy/telegram-action@v0.1.1
        if: failure()
        with:
          message: ‚ùó Failed to publish [${{ steps.vars.outputs.repo_name }}](https://github.com/${{ github.repository }}/actions) because of [${{ github.actor }}](https://github.com/${{ github.actor }})
          format: markdown
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}

  publish-chrome:
    runs-on: ubuntu-latest
    needs: publish-check-version
    steps:
      - name: Download artifact `gas-best-chrome`
        uses: actions/download-artifact@v3
        with:
          name: gas-best-chrome
          path: gas-best-chrome

      - name: Set vars
        id: vars
        run: |
          echo "::set-output name=repo_name::$(echo ${GITHUB_REPOSITORY#*/})"

      - name: Create zip
        run: cd gas-best-chrome && zip -r ../gas-best-chrome.zip .

      - name: Upload to Chrome store
        uses: trmcnvn/chrome-addon@v2
        with:
          extension: ofnhnnijgkcemfdolboenkinolhiciih
          zip: gas-best-chrome.zip
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}

      - name: Telegram Failure Notification
        uses: appleboy/telegram-action@v0.1.1
        if: failure()
        with:
          message: ‚ùó Failed to publish [${{ steps.vars.outputs.repo_name }}](https://github.com/${{ github.repository }}/actions) because of [${{ github.actor }}](https://github.com/${{ github.actor }})
          format: markdown
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: [publish-docker, publish-firefox, publish-chrome]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set vars
        id: vars
        run: |
          echo "::set-output name=version::$(echo ${GITHUB_REF#refs/tags/v})"
          echo "::set-output name=repo_name::$(echo ${GITHUB_REPOSITORY#*/})"

      - name: Find the last successful commit
        uses: nrwl/last-successful-commit-action@v1
        id: last_successful_commit
        with:
          branch: ${{ env.GITHUB_REF_NAME }}
          workflow_id: ${{ github.workflow }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Format changelog
        id: changelog
        run: |
          STR="$(git log --pretty=tformat:'‚Ä¢ %an: %s' ${{ steps.last_successful_commit.outputs.commit_hash }}..HEAD | tac)"
          STR="${STR//'%'/'%25'}"
          STR="${STR//$'\n'/'%0A'}"
          STR="${STR//$'\r'/'%0D'}"
          STR="%0D%0A$STR"
          echo "::set-output name=changelog::$STR"

      - name: Telegram Notification
        uses: appleboy/telegram-action@v0.1.1
        with:
          message: üöÄ Published a [${{ steps.vars.outputs.repo_name }}](https://github.com/${{ github.repository }}) version ${{ steps.vars.outputs.version }} to [GitHub registry](https://github.com/${{ github.repository }}/pkgs/container/${{ steps.vars.outputs.repo_name }}), [Firefox](https://addons.mozilla.org/en-US/firefox/addon/gasbest/), and [Chrome](https://chrome.google.com/webstore/detail/gasbest-gas-price-tracker/ofnhnnijgkcemfdolboenkinolhiciih)${{steps.changelog.outputs.changelog}}
          format: markdown
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Telegram Failure Notification
        uses: appleboy/telegram-action@v0.1.1
        if: failure()
        with:
          message: ‚ùó Failed to publish [${{ steps.vars.outputs.repo_name }}](https://github.com/${{ github.repository }}/actions) because of [${{ github.actor }}](https://github.com/${{ github.actor }})
          format: markdown
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
